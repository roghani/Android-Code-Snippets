package ...

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.ConnectException;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.entity.StringEntity;
import org.json.JSONException;
import org.json.JSONObject;

import android.util.Log;

public class GetJSONResponse {
    private static InputStream is = null;
    private static JSONObject jObj = null;
    private static String json = "";

    @SuppressWarnings("deprecation")
    public static JSONObject makePostRequest(String urlUlAnswered, JSONObject json) throws ConnectException {
        try {
            HttpPost httpPostRequest = new HttpPost(urlUlAnswered);
            HttpParams param = new BasicHttpParams();
            HttpConnectionParams.setConnectionTimeout(param, 60000);
            HttpConnectionParams.setSoTimeout(param, 60000);
            DefaultHttpClient httpclient = new DefaultHttpClient(param);
            StringEntity se = new StringEntity(json.toString());
            httpPostRequest.setEntity(se);
            httpPostRequest.setHeader("Accept", "application/json");
            httpPostRequest.setHeader("content-type", "application/json");
            HttpResponse response = (HttpResponse) httpclient.execute(httpPostRequest);
            HttpEntity entity = response.getEntity();
            is = entity.getContent();
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    is, "iso-8859-1"), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
            }
            is.close();
            json = sb.toString();
            jObj = new JSONObject(json);
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return jObj;
    }
}

Usage :
try{
    JSONObject jsonObject = new JSONObject();
    jsonObject.put("key", value);
    JSONObject jsonReceived = GetJSONResponse.makePostRequest("url", jsonObject);
		int jsonInt = jsonReceived.getInt(TAG_SUCCESS);
	}catch(JSONException e){
		e.printStackTrace();
	}catch(IOException e){
		e.printStackTrace();
	}
