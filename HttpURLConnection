public class AsyncHttpTask extends AsyncTask<String, Void, Integer> {
        @Override
        protected Integer doInBackground(String... params) {
            InputStream inputStream = null;
            HttpURLConnection urlConnection = null;
            Integer result = 0;
            try {
                URL url = new URL(params[0]);
                urlConnection = (HttpURLConnection) url.openConnection();

                 /* optional request header */
                urlConnection.setRequestProperty("Content-Type", "application/json");
                urlConnection.setRequestProperty("Accept", "application/json");

                urlConnection.setRequestMethod("POST");
               	// OutputStream os = httpCon.getOutputStream();
		// OutputStreamWriter osw = new OutputStreamWriter(os, "UTF-8");
                OutputStreamWriter osw= new OutputStreamWriter(urlConnection.getOutputStream());
                osw.write(params[1]);
                osw.flush();
                osw.close();
                
                int statusCode = urlConnection.getResponseCode();
                /* 200 represents HTTP OK */
                if (statusCode ==  200) {
                    inputStream = new BufferedInputStream(urlConnection.getInputStream());
                    String response = convertInputStreamToString(inputStream);
                    result = 1; // Successful
                }else{
                    result = 0; //"Failed to fetch data!";
                }

            } catch (Exception e) {
                Log.d(TAG, e.getLocalizedMessage());
            }
            return result;
        }

        @Override
        protected void onPostExecute(Integer result) {
            if(result == 1){
                // Update UI
            }else{
                Log.e(TAG, "Failed to fetch data!");
            }
        }
    }


    private String convertInputStreamToString(InputStream inputStream) throws IOException {
        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
        String line = "";
        StringBuilder sb = new StringBuilder();
        while((line = bufferedReader.readLine()) != null){
            sb.append(line + "\n");
        }
        if (bufferedReader != null) {
	        try {
		        bufferedReader.close();
		} catch (IOException e) {
			e.printStackTrace();
			return null;
		}
	}
        if(inputStream != null){
            inputStream.close();
        }
        return result;
    }
